"use client";

import { useEffect, useState } from "react";
import {useBinancePrices} from "@/lib";

// –¢–∏–ø–∏ –¥–∞–Ω–∏—Ö
interface Holding {
    symbol: string;
    amount: number;
}

interface PortfolioItem {
    symbol: string;
    amount: number;
    price: number;
    value: number;
    percent: number;
}


export function usePortfolioData() {
    const [holdings, setHoldings] = useState<Holding[]>([]);
    const [portfolio, setPortfolio] = useState<PortfolioItem[]>([]);
    const [loading, setLoading] = useState(true);

    // üß† 1. –û—Ç—Ä–∏–º—É—î–º–æ –º–æ–Ω–µ—Ç–∏ –∑ –±–µ–∫–µ–Ω–¥—É
    useEffect(() => {
        async function fetchHoldings() {
            try {
                const res = await fetch("/api/holdings");
                const json = await res.json();
                setHoldings(json.data || []);
            } catch (err) {
                console.error("‚ùå Failed to fetch holdings:", err);
            } finally {
                setLoading(false);
            }
        }

        fetchHoldings();
    }, []);

    // üß© 2. –§–æ—Ä–º—É—î–º–æ –º–∞—Å–∏–≤ —Ç—ñ–∫–µ—Ç—ñ–≤ –¥–ª—è Binance (SOL ‚Üí SOLUSDT)
    const symbols = holdings.map((h) => `${h.symbol}USDT`);

    // ‚ö° 3. –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ–∞–ª—å–Ω—ñ —Ü—ñ–Ω–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
    const prices = useBinancePrices(symbols);

    // üìä 4. –û–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
    useEffect(() => {
        if (!holdings.length || Object.keys(prices).length === 0) return;

        const totalValue = holdings.reduce((acc, h) => {
            const price = prices[`${h.symbol}USDT`] || 0;
            return acc + h.amount * price;
        }, 0);

        const calculated = holdings.map((h) => {
            const price = prices[`${h.symbol}USDT`] || 0;
            const value = h.amount * price;
            const percent = totalValue > 0 ? (value / totalValue) * 100 : 0;

            return { symbol: h.symbol, amount: h.amount, price, value, percent };
        });

        setPortfolio(calculated);
    }, [holdings, prices]);

    // üéØ 5. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥–æ—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ —á–∏ –≤—ñ–¥–∂–µ—Ç—ñ–≤
    return { portfolio, loading };
}
